@book{cohen1986,
 author = {Cohen, Daniel I.},
 title = {Introduction to Computer Theory},
 year = {1986},
 isbn = {0-471-80271-9},
 publisher = {John Wiley \& Sons, Inc.},
 address = {New York, NY, USA},
}

@book{aho2006,
 author = {Aho, Alfred V. and Lam, Monica S. and Sethi, Ravi and Ullman, Jeffrey D.},
 title = {Compilers: Principles, Techniques, and Tools (2Nd Edition)},
 year = {2006},
 isbn = {0321486811},
 publisher = {Addison-Wesley Longman Publishing Co., Inc.},
 address = {Boston, MA, USA},
}

@article{hutton1996monadic,
  title={Monadic parser combinators},
  author={Hutton, Graham and Meijer, Erik},
  year={1996},
  publisher={School of Computer Science and IT}
}

@standard{ecma404,
  author = {{Ecma International}},
  title = {The JSON Data Interchange Format},
  howpublished = {Standard ECMA-404},
  month = {December},
  year = {2017},
  index = {json[1]},
  uri = {http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf},
  abstract = {JSON is a text format that facilitates structured data interchange between all programming languages. JSON is syntax of braces, brackets, colons, and commas that is useful in many contexts, profiles, and applications. JSON was inspired by the object literals of JavaScript aka ECMAScript as defined in the ECMAScript Language Specification, third Edition. It does not attempt to impose ECMAScript's internal data representations on other programming languages. Instead, it shares a small subset of ECMAScript's textual representations with all other programming languages. JSON is agnostic about numbers. In any programming language, there can be a variety of number types of various capacities and complements, fixed or floating, binary or decimal. That can make interchange between different programming languages difficult. JSON instead offers only the representation of numbers that humans use: a sequence of digits. All programming languages know how to make sense of digit sequences even if they disagree on internal representations. That is enough to allow interchange.}
}

@standard{XML,
  added-at = {2011-08-11T13:45:29.000+0200},
  author = {Bray, Tim and Paoli, Jean and Sperberg-McQueen, C. M. and Maler, Eve and Yergeau, Fran{\c{c}}ois},
  biburl = {https://www.bibsonomy.org/bibtex/2d377a68849c69dc0fa00cd099f702977/utahell},
  howpublished = {{W3C} Recommendation},
  interhash = {9b4925af49b73d8d5c9d3c61449f06b2},
  intrahash = {d377a68849c69dc0fa00cd099f702977},
  keywords = {imported},
  howpublished = {\url{http://www.w3.org/TR/REC-xml/}},
  timestamp = {2011-12-14T18:17:35.000+0100},
  title = {Extensible Markup Language (XML) 1.0 (Fifth Edition)},
  year = 2008
}

@misc{lark, 
  title={Lark Grammar Reference}, 
  url={https://lark-parser.readthedocs.io/en/latest/grammar/}, 
  note = {Acessado em 2019-06-12},
  year = 2018
}

@article{leijen2001parsec,
  title={Parsec: Direct style monadic parser combinators for the real world},
  author={Leijen, Daan and Meijer, Erik},
  year={2001}
}

@misc{chevrotain, 
  title={Chevrotain: Parser Building Toolkit for JavaScrip}, 
  url={https://github.com/SAP/chevrotain}, 
  note = {Acessado em 2019-07-06},
  year = 2015
}
